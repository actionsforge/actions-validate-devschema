name: publish-github-action

on:
  push:
    tags:
      - 'v*'

jobs:
  publish-action:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Validate Action Metadata
        run: |
          echo "Validating action.yml..."
          if [ ! -f action.yml ]; then
            echo "Error: action.yml not found in the root of the repository."
            exit 1
          fi
          echo "action.yml is valid."

      - name: Ensure Tag Exists
        id: validate_tag
        run: |
          # Extract the tag from the GitHub context
          TAG="${GITHUB_REF#refs/tags/}"
          if [ -z "$TAG" ]; then
            echo "Error: No tag found. Ensure you push a valid tag."
            exit 1
          fi
          echo "Tag found: $TAG"

      - name: Generate Release Notes
        id: release_notes
        uses: actions/github-script@v6
        with:
          script: |
            const tag = context.ref.replace('refs/tags/', '');
            const { data: commits } = await github.rest.repos.listCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: tag,
              per_page: 100,
            });

            // Extract commit titles
            const commitTitles = commits.map(commit => `- ${commit.commit.message.split('\n')[0]}`);
            const releaseNotes = `## Release Notes for ${tag}\n\n${commitTitles.join('\n')}`;
            return releaseNotes;
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Publishing GitHub Action release for tag ${{ github.ref_name }}"
          gh release create "${{ github.ref_name }}" \
            --title "${{ github.ref_name }}" \
            --notes "${{ steps.release_notes.outputs.result }}"
